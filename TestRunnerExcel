package runner;

import java.io.*;
import java.nio.file.*;
import java.util.*;
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;

public class DynamicTestRunner {

    public static void main(String[] args) throws Exception {
        System.out.println("üé¨ Starting full test run...");

        // Run main tests (which will run one per Excel row)
        Result result = JUnitCore.runClasses(TestRunner.class);

        if (result.wasSuccessful()) {
            System.out.println("‚úÖ All tests passed. No rerun needed.");
            return;
        }

        // Fix failed scenarios file path and whitespace
        String failedFilePath = "target/failed_scenarios.txt";
        File file = new File(failedFilePath);

        if (!file.exists() || file.length() == 0) {
            System.out.println("‚úÖ No failed scenarios recorded.");
            return;
        }

        List<String> cleanedLines = new ArrayList<>();
        List<String> lines = Files.readAllLines(file.toPath());
        String projectDir = System.getProperty("user.dir");

        for (String line : lines) {
            line = line.trim();
            if (!line.isEmpty()) {
                if (!line.startsWith("src")) {
                    cleanedLines.add(projectDir + "/src/test/resources/features/" + line);
                } else {
                    cleanedLines.add(line);
                }
            }
        }

        Files.write(file.toPath(), cleanedLines);

        // Rerun failed scenarios
        System.out.println("üîÅ Rerunning failed scenarios...");
        Result rerunResult = JUnitCore.runClasses(RerunFailedScenarios.class);

        if (rerunResult.wasSuccessful()) {
            System.out.println("‚úÖ All failed tests passed in rerun.");
        } else {
            System.out.println("‚ùå Some tests still failed in rerun.");
        }
    }
}
